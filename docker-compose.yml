version: '3'

services:
  pricing-server:
    build:
      context: .
      dockerfile: Dockerfile.go
    env_file: .env
    ports:
      - "${WEBSOCKET_SERVER_PORT:-8080}:8080"
    volumes:
      - .:/app
    depends_on:
      - contracts-service

  contracts-service:
    build:
      context: ./contracts_service
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "${CONTRACTS_SERVICE_PORT:-8000}:8000"
    volumes:
      - ./contracts_service:/app
    depends_on:
      storage-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  storage-service:
    build:
      context: ./storage_service
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "${STORAGE_SERVICE_PORT:-8001}:8001"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 8001"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=pricingserver
      - POSTGRES_PASSWORD=development_password
      - POSTGRES_DB=pricingserver_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pricingserver -d pricingserver_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres_data:
